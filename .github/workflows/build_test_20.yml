name: Ubuntu 20 + ROS Noetic
on:
  push:
    branches:
    - 'main'
  pull_request:
    branches:
    - '*'
    
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - {name: 'Ubuntu 20 + ROS Noetic', rosdistro: 'noetic', container: 'ros:noetic-ros-base-focal'}
    container: ${{ matrix.config.container }}
    steps:
    - uses: actions/checkout@v1
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
        github-token: ${{ secrets.GITHUB_TOKEN }} 

    - name: Setup ccache
      shell: bash
      run: |
        apt update && apt install -y ccache

        export PATH="/usr/lib/ccache:$PATH"
        export CCACHE_DIR=$HOME/catkin_ws/ccache
        export CCACHE_STAMP=$(date +%Y-%m-%d_%H-%M-%S)

        echo "Updated PATH=$PATH"
        echo "Set CCACHE_DIR=$CCACHE_DIR"
        echo "Set CCACHE_STAMP=$CCACHE_STAMP"

        echo "CCACHE_DIR=$CCACHE_DIR" >> $GITHUB_ENV
        echo "CCACHE_STAMP=$CCACHE_STAMP" >> $GITHUB_ENV

        mkdir -p $CCACHE_DIR
        ccache --max-size=1G

    - name: Cache ccache files
      uses: actions/cache@v1.1.0
      with:
        path: ${{ env.CCACHE_DIR }}
        key: ${{ matrix.config.name }}-ccache-${{ env.CCACHE_STAMP }}
        restore-keys: |
          ${{ matrix.config.name }}-ccache-
        
    - name: Install System Deps on Noetic
      if: ${{ matrix.config.container == 'ros:noetic-ros-base-focal' }}
      run: |
        apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
        apt update && apt install -y python3-pip
        pip3 install osrf-pycommon
        apt update && apt install -y python3-wstool python3-catkin-tools
        
    - name: Release Build Test
      working-directory: 
      env:
        DEBIAN_FRONTEND: noninteractiv
      shell: bash
      run: |
        echo $PATH
        which g++ gcc
        export PATH="/usr/lib/ccache:$PATH
        which g++ gcc

        apt update
        apt install -y autoconf libtool git
        mkdir -p $HOME/catkin_ws/src;
        cd $HOME/catkin_ws
        catkin init
        catkin config --extend "/opt/ros/${{matrix.config.rosdistro}}"
        catkin config --merge-devel
        catkin config --cmake-args -DCMAKE_BUILD_TYPE=RelWithDebInfo 
        cd $HOME/catkin_ws/src
        ln -s $GITHUB_WORKSPACE
        wstool init . ./config_utilities/config_utilities.rosinstall
        wstool update
        catkin build -j$(nproc) -l$(nproc) config_utilities

#    - name: Run Unit Tests
#      working-directory:
#      run: |
#        cd $HOME/catkin_ws/src
#        catkin config --cmake-args -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCATKIN_ENABLE_TESTING=True
#        catkin build terrain_planner --no-deps -i --catkin-make-args tests
#        source $HOME/catkin_ws/devel/setup.bash
#        status=0 && for f in $HOME/catkin_ws/devel/lib/*/*-test; do $f || exit 1; done
#      shell: bash

      

